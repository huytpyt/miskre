/! Modal
.modal.fade aria-labelledby="myModalLabel" role="dialog" tabindex="-1"  id="imagesModal-#{product.id}"
  .modal-dialog role="document" 
    .modal-content
      .modal-header
        button.close aria-label="Close" data-dismiss="modal" type="button" 
          span aria-hidden="true"  &times;
        h4#myModalLabel.modal-title Edit #{product.name}'s images
      .modal-body
      	= form_for product, method: :put, url: images_update_products_management_index_path(product.id), :html => { :multipart => true }, remote: true, :authenticity_token => true, class: "upload-image-#{product.id}" do |f|
				  = hidden_field_tag :user_id, params[:user_id]
				  = hidden_field_tag :request_id, params[:request_id]
				  - if product.errors.any?
				    .row
				      #error_explanation
				        h2 #{pluralize(product.errors.count, "error")} prohibited this product from being saved:
				        ul
				          - product.errors.full_messages.each do |message|
				            li = message
				  - if product.persisted? && product.images.size > 0
				    .row
		          - product.images.each do |pi|
		          	.col-sm-6.text-center style="margin-bottom:5px;" class="image-#{pi.id}"
			            .col-sm-6
			              = image_tag pi.file.url(:medium), style: "width: 150px; height: 100px"
			            .col-sm-6
			            	= link_to 'Remove', pi, method: :delete, remote: true, data: { "image-id" => pi.id, confirm: 'Are you sure?' }, class: "remove-image-#{product.id}"
				  .row
				    .col-sm-12
				      h4 Images
				    .col-sm-12
				      ul#dvPreview
				    .col-sm-6
				      .field
				        = f.file_field :images, multiple: true, class: "add_image_#{product.id}", data: {id: product.id}
				    .col-sm-6
				      - if product.persisted?
				      	b Add image from URL:&nbsp;
				        a.upload_product_image_url#image_url href="javascript:void(0);" data-type="url"  data-id="#{product.id}"
				    .col-sm-12
				    	div class="gallery-#{product.id}"
				    
				    .col-sm-12
				    	br

				  .row
				  	.col-sm-12
				  		= f.submit "Save", class: 'btn btn-sm btn-primary'

javascript:
	$(document).ready(function() {
		$('.upload_product_image_url').editable({
      params: function(params) {
        params.id = $(this).editable().data('id');
        return params;
      }, 
      url: "#{upload_image_url_api_product_path}",
      method: 'PUT',
      title: 'Enter image url'
    });

    var imagesPreview = function(input, placeToInsertImagePreview) {

        if (input.files) {
            var filesAmount = input.files.length;

            for (i = 0; i < filesAmount; i++) {
                var reader = new FileReader();
                reader.onload = function(event) {
                    $($.parseHTML('<img class="col-sm-3" >')).attr('src', event.target.result).appendTo(placeToInsertImagePreview);
                }
                reader.readAsDataURL(input.files[i]);
            }
        }

    };

    $(".add_image_#{product.id}").on('change', function() {
    	$(".gallery-#{product.id}").html('');
    	imagesPreview(this, "div.gallery-#{product.id}");
    });

    $(".remove-image-#{product.id}").on('ajax:beforeSend', function(e, data, status, xhr){
    }).on('ajax:success', function(e, data, status, xhr){
      var image_id = $(this).attr('data-image-id');
      $('.image-' + image_id).remove();
    }).on('ajax:error',function(e, xhr, status, error){
    	alert('Can not remove this image!');
    });
    $("#edit_product_#{product.id}").on('ajax:beforeSend', function(e, data, status, xhr){
    }).on('ajax:success', function(e, data, status, xhr){
    	alert('Upload has been successfully!');
    }).on('ajax:error',function(e, xhr, status, error){
    	alert('Can not remove this image!');
    });
	});
