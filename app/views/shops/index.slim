#notice = notice

.page-header
  h1 Shops

#shops
  .row
    .column
      = link_to 'New Shop', shopify_app.login_path, class: 'button primary small'
      table
        thead
          tr
            th Name
            th Domain
            th Shopify Domain
            th
            th
            th
            th
            th
        tbody
          - @shops.each do |shop|
            tr
              td = shop.name
              td = shop.domain
              td = shop.shopify_domain
              /td = link_to 'Show', shop 
              /td = link_to 'Edit', edit_shop_path(shop)
              td = link_to t('.disconnect'), shop, method: :delete, data: { confirm: 'Are you sure?' }, class: 'button tiny alert'
              td = link_to t(".product_list"), shop_path(shop), class: "button tiny success"
              td = link_to t(".bundle_manager"), shop_bundle_manager_path(shop), class: "button tiny"
              - if current_user.user?
                td = link_to t(".sync_products"), sync_products_from_shop_api_product_path(shop), class: "button tiny success sync_products", method: :post, remote: true
              td = link_to t(".report"), report_view_shops_path(shop), class: "button tiny"

#sync_products_modal.reveal.reveal-modal aria-hidden="true" aria-labelledby="modalTitle" data-reveal="" role="dialog"
  h3#modalTitle External products
  .modal_content.hide
  button.close-button data-close="" aria-label="Close modal" type="button"
      span aria-hidden="true" &times

javascript:
  $(document).ready(function() {
    $('.sync_products').on('ajax:success', function(e, data, status, xhr){
      if (data.status) {
        $.ajax({
          url: data.user_products_url,
          type: "GET",
          dataType: "html",
          success: function (data) {
            $('#modalTitle').html('External products');
            $('.modal_content').html(data);
            $('#sync_products_modal').foundation('open');
          },
          error: function (xhr, status) {
              console.log("Sorry, there was a problem!");
          },
          complete: function (xhr, status) {
            $('.modal_content').removeClass('hide');
          }
        });
      }
    }).on('ajax:error',function(e, xhr, status, error){
        $('.modal_content').html('');
        $('#modalTitle').html('Products Not Found!');
        $('#sync_products_modal').foundation('open');
    });
  });
