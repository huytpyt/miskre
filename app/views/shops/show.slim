#shop-products-list
  .page-header
    h2.text-center #{@shop.name} #{t('product_list')}
  br
  br
  .row
    .column
      = paginate @supplies

  .row
    .column.large-8
      = form_for @shop, url: shop_global_price_setting_path(@shop) do |f|
        .row
          .column.large-12
            b Global price Setting:
            br
            
              .price-text
                | Price =  Cost x 
              .price-setting-rate
                = f.text_field :cost_rate
              .price-text
                | +
              .price-setting-rate
                = f.text_field :shipping_rate
              .price-text
                | x Epub Cost
             
        .row
          .column.large-12
            .price-text
                | Compare at price =  Price x Random(
            .price-setting-rate
                = f.text_field :random_from
            .price-text ,
            .price-setting-rate
                = f.text_field :random_to
            .price-text )
            |&nbsp;&nbsp;&nbsp;
            = f.submit "Save", class: "button success"
    .column.large-4
      .row
        .column.large-12
          b Price setting option selected:
          br
          .option-selected
            = radio_button_tag :global_setting, nil, checked = @global_settting, disabled: true
            |&nbsp;Global price Setting
            |&nbsp;&nbsp;&nbsp;
            = radio_button_tag :suggested_price, nil, checked = !@global_settting, disabled: true
            |&nbsp;Suggested Price
      .row
        .column.large-12.pull-left
          = link_to @global_settting ? "Revert to suggested price" : "Change to global price setting", shop_change_price_option_path(@shop), data: { confirm: 'Are you sure?' }, class: "button"
  .row
    .column
      = form_tag(shop_path(@shop), method: :get) do
        .row
          .columns.large-8
            label
              | Enter SKU or product name:
              = text_field_tag :search
          .columns.large-4
            label
              br
              = submit_tag "Search", class: "button"
  .row.large-up-3.page-content#productspost
    - unless @supplies.none?
      - @supplies.each do |supply|
          .column.item
            .card
              .card-divider
                h4.each-block-header
                  span.text-left.pull-left
                    = supply.name
                  /span.text-right.pull-right
                    = product.price
              .card-section
                - unless supply.product.images.empty?
                  = image_tag supply.product.images.first.file.url(:medium)
                - else
                  = image_tag "default.jpg"
              .card-section
                p 
                  = t('.cost')
                  |:&nbsp;$
                  = supply.cost
                p
                  = t('.price')
                  |:&nbsp;$
                  = supply.price 
                p
                  = t('.compare_at_price')
                  |:&nbsp;$
                  = supply.compare_at_price
                p
                  = t('.profit')
                  |:&nbsp;$
                  - if supply.price && supply.epub && supply.cost && supply.cost_epub
                    = ((supply.price + supply.epub) - (supply.cost + supply.cost_epub)).round(2)
                p 
                  |Details about cost, price, shipping, profit:
                  = link_to "Detail", shop_shipping_path(@shop, supply)
              .card-section
                ul.menu
                  li
                    = link_to "Customize", edit_supply_path(supply), class: 'button tiny'
                  li
                    = link_to "Remove", supply_path(supply),
                      method: :delete, data: { confirm: 'Are you sure?'}, class: 'button alert tiny'
                    /= link_to 'Remove', '#', method: :delete, data: { confirm: 'Are you sure?' }
    - else
      .column
        h4 Not found!
  .row
    = link_to t('.back'), shops_path
javascript:
  $('#products').imagesLoaded( function(){
    $('#products').isotope({
      itemSelector : '.item'
    });
  });